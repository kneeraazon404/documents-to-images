[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "documents-to-images-converter"
version = "1.0.0"
authors = [
    {name = "Kiran Raj Baral", email = "kneeraazon404@gmail.com"},
]
description = "A comprehensive Python toolkit for converting various document formats into images and other formats"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Utilities",
]
license = {text = "MIT"}
keywords = [
    "document", "conversion", "pdf", "docx", "html", "images", 
    "converter", "office", "batch", "automation"
]
dependencies = [
    "pdf2image>=1.16.0",
    "Pillow>=9.0.0", 
    "pdfkit>=1.0.0",
    "mammoth>=1.6.0",
    "fpdf2>=2.7.0",
    "PyPDF2>=3.0.0",
    "PyYAML>=6.0.0",
    "tqdm>=4.64.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.19.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.0.0",
    "coverage[toml]>=6.0.0",
]

[project.scripts]
doc-converter = "doc_converter.cli.main:main"
documents-to-images = "doc_converter.cli.main:main"

[project.urls]
Homepage = "https://github.com/kneeraazon404/documents-to-images"
Documentation = "https://documents-to-images.readthedocs.io/"
Repository = "https://github.com/kneeraazon404/documents-to-images.git"
"Bug Reports" = "https://github.com/kneeraazon404/documents-to-images/issues"
Changelog = "https://github.com/kneeraazon404/documents-to-images/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["doc_converter*"]

[tool.setuptools.package-data]
doc_converter = ["*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["doc_converter"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["doc_converter"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]